buildscript {

    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }

}

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

repositories {

    maven { url 'http://download.crashlytics.com/maven' }

}

task printProps << {

    println 'Printing properties'
    println android_keystore
    println android_keystore_password
    println android_key_alias
    println android_key_password

}

android {

    compileSdkVersion 21
    buildToolsVersion '21.1.1'

//    Scheme for version codes: ##@@$$$%% , using:
//    ##   - the first two digits for the API Level,
//    @@   - the second and third digits for the minimum and maximum screen size
//           (1 - 4 indicating each of the four sizes) or to denote the texture formats
//
///          the last five digits are for the app version:
//    $$$  - three digits for major version (the user will see only the major version)
///   %%   - two digits for minor version

    defaultConfig {

        minSdkVersion 15
        targetSdkVersion 21
        versionCode 130021603
        versionName "2.16"

        applicationId "com.lechucksoftware.proxy.proxysettings"

        testApplicationId "com.lechucksoftware.proxy.proxysettings.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testHandleProfiling true
        testFunctionalTest true
    }

    signingConfigs {

        release

    }

    buildTypes {

        release {

            // As long as proxy settings is open source this shouldn't be needed
            minifyEnabled false
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            debuggable false

            buildConfigField "String", "ANALYTICS_TRACK_ID", "\"" + (project.hasProperty('analytics_track_id_release') ? analytics_track_id_release : 1234)  + "\""

            signingConfig project.hasProperty('android_keystore') ? signingConfigs.release : signingConfigs.debug

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace(".apk", "-" + defaultConfig.versionCode + ".apk"))
                }
            }
        }

        debug {

            minifyEnabled false
            shrinkResources false

            debuggable true

            versionNameSuffix "-DEBUG"

            buildConfigField "String", "ANALYTICS_TRACK_ID", "\"" + (project.hasProperty('analytics_track_id_debug') ? analytics_track_id_debug : 1234)  + "\""
        }

        CI {

            debuggable true
            shrinkResources false

            minifyEnabled false

            versionNameSuffix "-CI"

            buildConfigField "String", "ANALYTICS_TRACK_ID", 'null'
            ext.enableCrashlytics = false
        }
    }

    if (project.hasProperty('android_keystore') &&
            project.hasProperty('android_keystore_password') &&
            project.hasProperty('android_key_alias') &&
            project.hasProperty('android_key_password')) {

        println 'Signing Configurations succesfully found'

        android.signingConfigs.release.storeFile = file(android_keystore)
        android.signingConfigs.release.storePassword = android_keystore_password
        android.signingConfigs.release.keyAlias = android_key_alias
        android.signingConfigs.release.keyPassword = android_key_password

    } else {

        println 'Signing Configurations not found'
        buildTypes.release.signingConfig = null

    }

    sourceSets {

        main {

            java {
                srcDir 'src'
                exclude '**/excluded_from_build/**'
                exclude '**/ui/help/**'
            }

        }
    }
}

dependencies {

// https://github.com/tony19/logback-android
//    compile 'org.slf4j:slf4j-api:1.7.1'
//    compile 'com.github.tony19:logback-android-core:1.0.7-1'
//    compile 'com.github.tony19:logback-android-classic:1.0.7-1'

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':android-proxy-library')

    //    compile 'de.keyboardsurfer.android.widget:crouton:1.8.4'

// Enable for adding support to material design
//    compile 'com.android.support:appcompat-v7:21.0.+'

    compile 'com.google.android.gms:play-services:6.5.87'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.crashlytics.android:crashlytics:1.1.13'
    compile 'com.jakewharton.timber:timber:2.5.0'
    compile 'com.jakewharton:butterknife:5.1.2'
    compile 'com.github.gabrielemariotti.changeloglib:library:1.5.2'
}
