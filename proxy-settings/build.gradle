buildscript {

    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.14.7'
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:0.14.1'
//        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.9.1'
    }
}

//apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'crashlytics'
apply plugin: 'spoon'

repositories {

    maven { url 'http://download.crashlytics.com/maven' }

}

task printProps << {

    println 'Printing properties'
    println android_keystore
    println android_keystore_password
    println android_key_alias
    println android_key_password

}

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':android-proxy-library')

// Enable for adding support to material design
//    compile 'com.android.support:appcompat-v7:21.0.+'

    compile 'com.google.android.gms:play-services-base:6.5.+'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.crashlytics.android:crashlytics:1.1.13'
    compile 'com.jakewharton.timber:timber:2.5.0'
    compile 'com.jakewharton:butterknife:5.1.2'
    compile 'com.github.gabrielemariotti.changeloglib:library:1.5.2'

    androidTestCompile 'com.jakewharton.espresso:espresso:1.1-r3'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.2.1'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.1'
}

android {

    compileSdkVersion 21
    buildToolsVersion '21.1.2'

//    Scheme for version codes: ##@@$$$%% , using:
//    ##   - the first two digits for the API Level,
//    @@   - the second and third digits for the minimum and maximum screen size
//           (1 - 4 indicating each of the four sizes) or to denote the texture formats
//
///          the last five digits are for the app version:
//    $$$  - three digits for major version (the user will see only the major version)
///   %%   - two digits for minor version

    defaultConfig {

        minSdkVersion 15
        targetSdkVersion 21
        versionCode 130021701
        versionName "2.17"

        applicationId "com.lechucksoftware.proxy.proxysettings"

        testApplicationId "com.lechucksoftware.proxy.proxysettings.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
//        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
        testHandleProfiling true
        testFunctionalTest true
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'NOTICE.txt'
    }

    signingConfigs {
        release
    }

    sourceSets {

        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }

        androidTest {
            java.srcDirs = ['src/main/java', 'src/androidTest/java']
        }
    }

    buildTypes {

        release {

            // As long as proxy settings is open source this shouldn't be needed
            minifyEnabled false
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            debuggable false

            buildConfigField "String", "ANALYTICS_TRACK_ID", "\"" + (project.hasProperty('analytics_track_id_release') ? analytics_track_id_release : 1234)  + "\""

            signingConfig project.hasProperty('android_keystore') ? signingConfigs.release : signingConfigs.debug

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace(".apk", "-" + defaultConfig.versionCode + ".apk"))
                }
            }
        }

        debug {

            minifyEnabled false
            shrinkResources false

            debuggable true

            versionNameSuffix "-DEBUG"

            buildConfigField "String", "ANALYTICS_TRACK_ID", "\"" + (project.hasProperty('analytics_track_id_debug') ? analytics_track_id_debug : 1234)  + "\""
        }

        CI {

            debuggable true
            shrinkResources false

            minifyEnabled false

            versionNameSuffix "-CI"

            buildConfigField "String", "ANALYTICS_TRACK_ID", 'null'
            ext.enableCrashlytics = false
        }
    }

    if (project.hasProperty('android_keystore') &&
            project.hasProperty('android_keystore_password') &&
            project.hasProperty('android_key_alias') &&
            project.hasProperty('android_key_password')) {

        println 'Signing Configurations succesfully found'

        android.signingConfigs.release.storeFile = file(android_keystore)
        android.signingConfigs.release.storePassword = android_keystore_password
        android.signingConfigs.release.keyAlias = android_key_alias
        android.signingConfigs.release.keyPassword = android_key_password

    } else {

        println 'Signing Configurations not found'
        buildTypes.release.signingConfig = null
    }
}

